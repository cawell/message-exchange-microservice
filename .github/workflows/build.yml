name: Build
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: postgres_user
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      POSTGRES_DB: rails_test
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: password
      DATABASE_URL: "postgres://postgres_user:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bundle exec rails db:schema:load
      # Add or replace test runners here
      - name: Unit tests and coverage report
        run: bundle exec rspec
      # - name: Lint Ruby files
      #   run: bundle exec rubocop --parallel --fail-level F --format json --out rubocop-result.json
      # - name: Security audit application code
      #   run: bundle exec brakeman -o brakeman/output.sonar2
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
